

(define macro-rule (read "('macro name args body)"))

(define macro-pattern-record nil)


(define (macro-process macro)
  (define r (matching macro-rule macro))
  (cons (strict-lookup r 'name) r))


(define (macro-apply macro-pattern src)
  (define args (strict-lookup macro-pattern 'args))
  (define body (strict-lookup macro-pattern 'body))
  (apply-pattern body (matching args src)))

; (define macro-rule (read "(macro 'name 'args 'body)"))

(define (define-proc-macro macro)
  (define r (matching macro-rule macro))
  (cons (strict-lookup r 'name) r))



(define (rewrite-produre pat produre src)
  (define r (matching pat src))
  (result-map produre r))

(define (rewrite-rule pat temp src)
  (define (produre record) (apply-template temp record))
  (rewrite-produre pat produre src))

